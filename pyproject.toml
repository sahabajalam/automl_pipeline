[project]
name = "automl-pipeline"
version = "1.0.0"
description = "A comprehensive, automated machine learning pipeline that handles the entire ML workflow from data ingestion to model deployment."
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "ML Pipeline Team", email = "team@example.com" }
]
keywords = ["machine-learning", "automl", "pipeline", "mlops", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Core ML and Data Processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "lightgbm>=4.0.0",
    # Data Validation and Quality
    "great-expectations>=0.17.0",
    # Model Tracking and Experiment Management
    "mlflow>=2.8.0",
    # API Development
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    # Deployment and Containerization
    "docker>=6.0.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    # Monitoring and Observability
    "prometheus-client>=0.19.0",
    # Utilities
    "joblib>=1.3.0",
    "python-multipart>=0.0.6",
    "python-json-logger>=2.0.7",
    "langgraph>=0.6.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/example/automl-pipeline"
Documentation = "https://automl-pipeline.readthedocs.io/"
Repository = "https://github.com/example/automl-pipeline.git"
Issues = "https://github.com/example/automl-pipeline/issues"

[project.scripts]
automl-pipeline = "main:main"
automl-api = "src.api.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "great_expectations.*",
    "mlflow.*",
    "xgboost.*",
    "lightgbm.*",
    "docker.*",
    "langgraph.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".tox",
]
